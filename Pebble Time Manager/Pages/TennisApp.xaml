<Page
    x:Class="Pebble_Time_Manager.TennisApp"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Pebble_Time_Manager"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:Tennis_Statistics.Converters"
    xmlns:vm="using:Tennis_Statistics.ViewModels"
    mc:Ignorable="d" Unloaded="Page_Unloaded" Loaded="Page_Loaded">

    <Page.Resources>
        <converters:ColorToBrushConverter x:Name="ColorToBrushConverter" />
        <converters:GetElementFromListConverter x:Name="GetElementConverter" />
        <converters:BooleanToVisibilityConverter x:Name="BoolToVisibilityConverter" />
        <converters:ContestantNameConverter x:Name="NameConverter" />
        <converters:TemplateSelectedListviewItem x:Name="TemplateSelectedListviewItem" />
        <converters:UppercaseConverter x:Name="UppercaseConverter" />
        <converters:DateTimeConverter x:Name="DateTimeConverter" />
        <converters:BooleanXOR x:Name="BooleanXORConverter" />
        <converters:vmPlayerNameConverter x:Name="vmPlayerNameConverter" />
        <converters:StringFormatConverter x:Name="StringFormatConverter" />



        <Thickness x:Key="PhoneBorderThickness">2.5</Thickness>
        <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
        <FontWeight x:Key="PhoneButtonFontWeight">Semibold</FontWeight>
        <x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
        <x:Double x:Key="PhoneButtonMinHeight">57.5</x:Double>
        <x:Double x:Key="PhoneButtonMinWidth">109</x:Double>
        <Thickness x:Key="PhoneTouchTargetOverhang">0,9.5</Thickness>
        <SolidColorBrush x:Key="ButtonDisabledBackgroundThemeBrush"
                         Color="Transparent" />

        <SolidColorBrush x:Key="ProgressBarIndeterminateForegroundThemeBrush"
                         Color="White" />
        <ControlTemplate x:Key="ListViewItemSimple"
                         TargetType="ListViewItem">
            <Border x:Name="OuterContainer"
                    RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <ScaleTransform x:Name="ContentScaleTransform" />
                </Border.RenderTransform>
                <Grid x:Name="ReorderHintContent"
                      Background="Transparent">
                    <Border x:Name="ContentContainer">
                        <Border x:Name="TiltContainer">
                            <Border x:Name="ContentBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="ContentBorderTranslateTransform" />
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentPresenter x:Name="contentPresenter"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}" />
                                    <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                                            In the DataPlaceholder state, the Content is not loaded yet so we
                                            approximate the size of the item using placeholder text. -->
                                    <TextBlock x:Name="PlaceholderTextBlock"
                                               Opacity="0"
                                               Text="Xg"
                                               Foreground="{x:Null}"
                                               Margin="{TemplateBinding Padding}"
                                               IsHitTestVisible="False"
                                               AutomationProperties.AccessibilityView="Raw" />

                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
        <FontFamily x:Key="ContentControlThemeFontFamily">Segoe WP</FontFamily>
        <x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
        <Thickness x:Key="GridViewItemMargin">5</Thickness>
        <SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush" Color="Transparent"/>
        <x:Double x:Key="CheckBoxBorderThemeThickness">2.5</x:Double>
        <x:Double x:Key="ListViewItemContentOffsetX">-40.5</x:Double>
        <Thickness x:Key="ListViewItemMultiselectCheckBoxMargin">0,9.5,0,0</Thickness>
        <Thickness x:Key="GridViewItemMultiselectBorderThickness">1</Thickness>
        <x:Double x:Key="ListViewItemDisabledThemeOpacity">0.55</x:Double>
        <x:Double x:Key="ListViewItemContentTranslateX">40.5</x:Double>
        <x:Double x:Key="ListViewItemReorderHintThemeOffset">32</x:Double>
        <Style x:Key="GVItemTemplateImage" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="False"/>
            <Setter Property="Margin" Value="{ThemeResource GridViewItemMargin}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ContentScaleTransform"/>
                            </Border.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="TiltContainer"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckboxPressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
                                        <VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoMultiSelect"/>
                                    <VisualState x:Name="ListMultiSelect">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
                                            <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="GridMultiSelect">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderModeStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="ReorderEnabled">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Reorderable">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderDisabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
                                    <Border x:Name="CheckboxOuterContainer">
                                        <Border.Clip>
                                            <RectangleGeometry Rect="0,0,25.5,25.5"/>
                                        </Border.Clip>
                                        <Grid x:Name="CheckboxContainer">
                                            <Grid.RenderTransform>
                                                <TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
                                            </Grid.RenderTransform>
                                            <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
                                            <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="ContentContainer">
                                    <Border x:Name="TiltContainer">
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <Border.RenderTransform>
                                                <TranslateTransform x:Name="ContentBorderTranslateTransform"/>
                                            </Border.RenderTransform>
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                                <Rectangle x:Name="PlaceholderRect" 
                                                           IsHitTestVisible="False" Visibility="Collapsed"/>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Border>
                                <Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
                                    <Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
                                        <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
                                        <Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonNoMargin" TargetType="ToggleButton">
            <Setter Property="Background" Value="{ThemeResource ToggleButtonBackgroundThemeBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForegroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="12,4,12,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedPointerOverBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0,3,0,3">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonNoMarginSmall"
               TargetType="ToggleButton">
            <Setter Property="Background"
                    Value="{ThemeResource ToggleButtonBackgroundThemeBrush}" />
            <Setter Property="Foreground"
                    Value="{ThemeResource ToggleButtonForegroundThemeBrush}" />
            <Setter Property="BorderBrush"
                    Value="{ThemeResource ToggleButtonBorderThemeBrush}" />
            <Setter Property="BorderThickness"
                    Value="{ThemeResource ToggleButtonBorderThemeThickness}" />
            <Setter Property="Padding"
                    Value="1,1,1,1" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="FontFamily"
                    Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="FontSize"
                    Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonPressedBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonPressedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonDisabledBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedPointerOverBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedPointerOverBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedPressedBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedPressedBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedPressedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedDisabledBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonDisabledBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonCheckedDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" />
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonPressedBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonPressedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonDisabledBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="FocusVisualWhite" />
                                            <DoubleAnimation Duration="0"
                                                             To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="FocusVisualBlack" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Margin="0,3,0,3">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  AutomationProperties.AccessibilityView="Raw"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       StrokeDashOffset="1.5"
                                       StrokeEndLineCap="Square"
                                       Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeDashArray="1,1" />
                            <Rectangle x:Name="FocusVisualBlack"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       StrokeDashOffset="0.5"
                                       StrokeEndLineCap="Square"
                                       Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeDashArray="1,1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FlipViewNoControls" TargetType="FlipView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="True"/>
            <Setter Property="ScrollViewer.IsVerticalScrollChainingEnabled" Value="True"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel AreScrollSnapPointsRegular="True" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="FlipView">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
                                <Border.Resources>
                                    <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource FlipViewButtonBorderThemeBrush}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" Background="{ThemeResource FlipViewButtonBackgroundThemeBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Arrow" Data="M4.12,0 L9.67,5.47 L4.12,10.94 L0,10.88 L5.56,5.47 L0,0.06 z" Fill="{ThemeResource FlipViewButtonForegroundThemeBrush}" HorizontalAlignment="Center" Height="10.94" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="9.67"/>
                                        </Border>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource FlipViewButtonBorderThemeBrush}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" Background="{ThemeResource FlipViewButtonBackgroundThemeBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Arrow" Data="M5.55,0 L9.67,0.06 L4.12,5.47 L9.67,10.88 L5.55,10.94 L0,5.48 z" Fill="{ThemeResource FlipViewButtonForegroundThemeBrush}" HorizontalAlignment="Center" Height="10.94" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="9.67"/>
                                        </Border>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="VerticalNextTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource FlipViewButtonBorderThemeBrush}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" Background="{ThemeResource FlipViewButtonBackgroundThemeBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Arrow" Data="M0.06,0 L5.47,5.56 L10.88,0 L10.94,4.12 L5.48,9.67 L0,4.12 z" Fill="{ThemeResource FlipViewButtonForegroundThemeBrush}" HorizontalAlignment="Center" Height="9.67" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="10.94"/>
                                        </Border>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="VerticalPreviousTemplate" TargetType="Button">
                                        <Border x:Name="Root" BorderBrush="{ThemeResource FlipViewButtonBorderThemeBrush}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" Background="{ThemeResource FlipViewButtonBackgroundThemeBrush}">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="PointerOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPointerOverForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBackgroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Root">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedBorderThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewButtonPressedForegroundThemeBrush}"/>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Path x:Name="Arrow" Data="M5.63,0 L11.11,5.55 L11.05,9.67 L5.64,4.12 L0.23,9.67 L0.17,5.55 z" Fill="{ThemeResource FlipViewButtonForegroundThemeBrush}" HorizontalAlignment="Center" Height="9.67" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="10.94"/>
                                        </Border>
                                    </ControlTemplate>
                                </Border.Resources>
                                <Grid>
                                    <ScrollViewer x:Name="ScrollingHost" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalSnapPointsType="MandatorySingle" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalSnapPointsType="MandatorySingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                    <!--
									<Button x:Name="PreviousButtonHorizontal" HorizontalAlignment="Left" Height="40" IsTabStop="False" Template="{ThemeResource HorizontalPreviousTemplate}" VerticalAlignment="Center" Width="70"/>
        							<Button x:Name="NextButtonHorizontal" HorizontalAlignment="Right" Height="40" IsTabStop="False" Template="{StaticResource HorizontalNextTemplate}" VerticalAlignment="Center" Width="70"/>
        							<Button x:Name="PreviousButtonVertical" HorizontalAlignment="Center" Height="40" IsTabStop="False" Template="{StaticResource VerticalPreviousTemplate}" VerticalAlignment="Top" Width="70"/>
        							<Button x:Name="NextButtonVertical" HorizontalAlignment="Center" Height="40" IsTabStop="False" Template="{StaticResource VerticalNextTemplate}" VerticalAlignment="Bottom" Width="70"/>
        							-->
                                </Grid>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HyperlinkButtonUnderlined" TargetType="HyperlinkButton">
            <Setter Property="Foreground" Value="{ThemeResource HyperlinkForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{ThemeResource HyperlinkButtonBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource HyperlinkButtonBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource HyperlinkButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="12,4,12,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HyperlinkButton">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="#99000000"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="#66000000"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource HyperlinkDisabledThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonBackgroundColorPressed" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonBackgroundThemeBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource ButtonForegroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="12,4,12,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#66FFFFFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#66FFFFFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleButton"
               TargetType="Button">
            <Setter Property="Background"
                    Value="Transparent" />
            <!--<Setter Property="BorderBrush"
                    Value="{ThemeResource PhoneForegroundBrush}" />
            <Setter Property="Foreground"
                    Value="{ThemeResource PhoneForegroundBrush}" />-->
            <Setter Property="BorderThickness"
                    Value="{ThemeResource PhoneBorderThickness}" />
            <Setter Property="FontFamily"
                    Value="{ThemeResource PhoneFontFamilyNormal}" />
            <Setter Property="FontWeight"
                    Value="{ThemeResource PhoneButtonFontWeight}" />
            <Setter Property="FontSize"
                    Value="{ThemeResource TextStyleLargeFontSize}" />
            <Setter Property="Padding"
                    Value="9.5,0" />
            <Setter Property="MinHeight"
                    Value="{ThemeResource PhoneButtonMinHeight}" />
            <Setter Property="MinWidth"
                    Value="{ThemeResource PhoneButtonMinWidth}" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="Grid"
                              Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed"
                                                          To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver"
                                                          To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed"
                                                          To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="Grid" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ButtonPressedForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                           Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ButtonDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ButtonDisabledBorderThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Border">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Margin="{ThemeResource PhoneTouchTargetOverhang}">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  AutomationProperties.AccessibilityView="Raw"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="StatisticsItem">
            <Grid HorizontalAlignment="Stretch"
                  Visibility="{Binding Visible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="85*" />
                    <ColumnDefinition Width="130*" />
                    <ColumnDefinition Width="85*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Value1}"
                           FontSize="15"
                           Margin="5"
                           Grid.Column="0"
                           FontWeight="Bold"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <TextBlock Text="{Binding Description}"
                           FontSize="13"
                           Margin="5"
                           HorizontalAlignment="Center"
                           Foreground="#C0FFFFFF"
                           Grid.Column="1"
                           VerticalAlignment="Center" />
                <TextBlock Text="{Binding Value2}"
                           FontSize="15"
                           Margin="5"
                           FontWeight="Bold"
                           Grid.Column="2"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SetFinished">
            <StackPanel MinWidth="50">
                <TextBlock FontSize="48"
                           Text="{Binding Score1}"
                           Foreground="White"
                           Height="55"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <TextBlock FontSize="48"
                           Text="{Binding Score2}"
                           Foreground="White"
                           Height="55"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="SetInProgress">
            <StackPanel Background="#60000000"
                        MinWidth="50">
                <TextBlock FontSize="48"
                           Text="{Binding Score1}"
                           Foreground="White"
                           Height="55"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <TextBlock FontSize="48"
                           Text="{Binding Score2}"
                           Foreground="White"
                           Height="55"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="StatisticsMatchSetNormal">
            <Grid Height="30"
                  Margin="0,0,4,0">
                <TextBlock Text="{Binding Description}"
                           Padding="4"
                           FontSize="13"
                           FontWeight="Normal"
                           Foreground="White" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="StatisticsMatchSetSelected">
            <Grid Height="30"
                  Margin="0,0,4,0">
                <Rectangle Fill="Black"
                           Opacity="0.50" />
                <TextBlock Padding="4"
                           FontSize="13"
                           FontWeight="Bold"
                           Foreground="White"
                           FontStyle="Normal">
                    <Underline>
                        <Run Text="{Binding Description}" />
                    </Underline>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <vm:SetTemplateSelector x:Key="selSetTemplate"
                                SetFinishedHeaderTemplate="{StaticResource SetFinished}"
                                SetInProgressTemplate="{StaticResource SetInProgress}" />

        <DataTemplate x:Key="Statistics2">
            <!--<Grid HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  Margin="0,0,10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>-->
            <StackPanel HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">

                <Grid Background="#80000000"
                      HorizontalAlignment="Stretch"
                      Margin="0,0,0,1">
                    <StackPanel Orientation="Horizontal">

                        <!-- Type of statistic -->
                        <ItemsControl ItemsSource="{Binding vmMatch.StatisticsCollection.Groups}"
                                      HorizontalContentAlignment="Stretch"
                                      Margin="0,0,20,0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="6,0,0,0"
                                                HorizontalAlignment="Stretch" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ToggleButton Content="{Binding Description}"
                                                  IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                                  IsHitTestVisible="{Binding IsSelected, Converter={StaticResource BooleanXORConverter} ,Mode=TwoWay}"
                                                  BorderThickness="1"
                                                  Margin="-1,0,0,0"
                                                  FontSize="10"
                                                  MinHeight="30"
                                                  MinWidth="50"
                                                  Style="{StaticResource ToggleButtonNoMarginSmall}">

                                    </ToggleButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Grid>

                <Grid Background="#80000000"
                      HorizontalAlignment="Stretch"
                      Margin="0,0,0,1">

                    <StackPanel Orientation="Horizontal">

                        <!-- Match or set -->
                        <ItemsControl ItemsSource="{Binding vmMatch.StatisticsCollection.Children}"
                                      HorizontalContentAlignment="Stretch">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="6,0,0,0"
                                                HorizontalAlignment="Stretch" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ToggleButton Content="{Binding Description}"
                                                  IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                                  IsHitTestVisible="{Binding IsSelected, Converter={StaticResource BooleanXORConverter} ,Mode=TwoWay}"
                                                  BorderThickness="1"
                                                  Margin="-1,0,0,0"
                                                  FontSize="10"
                                                  MinHeight="30"
                                                  MinWidth="50"
                                                  Style="{StaticResource ToggleButtonNoMarginSmall}">

                                    </ToggleButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                    </StackPanel>
                </Grid>


                <!-- Player names -->
                <Grid Background="#80000000"
                      Margin="0,0,0,1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40*" />
                        <ColumnDefinition Width="20*" />
                        <ColumnDefinition Width="40*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding vmMatch.NamePlayer1, Converter={StaticResource UppercaseConverter}}"
                               FontSize="13"
                               Margin="5"
                               Grid.Column="0"
                               HorizontalAlignment="Left"
                               FontWeight="Bold" />
                    <TextBlock Text="{Binding vmMatch.StatisticsCollection.Selected.Duration}"
                               FontSize="13"
                               Margin="5"
                               Grid.Column="1"
                               HorizontalAlignment="Center"
                               FontWeight="Bold" />
                    <TextBlock Text="{Binding vmMatch.NamePlayer2, Converter={StaticResource UppercaseConverter}}"
                               FontSize="13"
                               Margin="5"
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               FontWeight="Bold" />
                </Grid>

                <!--Statistic-->
                <Grid>
                    <ListView ItemsSource="{Binding vmMatch.StatisticsCollection.VisibleElements}"
                              IsItemClickEnabled="False"
                              Background="#80000000"
                              HorizontalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Visibility="{Binding vmMatch.StatisticsCollection.SelectedGroup.IsAvailable, Converter={StaticResource BoolToVisibilityConverter}}"
                              ItemTemplate="{StaticResource StatisticsItem}">
                        <ListView.ItemContainerTransitions>
                            <TransitionCollection />
                        </ListView.ItemContainerTransitions>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment"
                                        Value="Stretch" />
                                <Setter Property="Template"
                                        Value="{StaticResource ListViewItemSimple}" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <Grid VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Background="#80000000"
                          Visibility="{Binding vmMatch.StatisticsCollection.SelectedGroup.IsAvailable, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=XOR}">

                        <TextBlock Text="This feature is not available."
                                   FontSize="20"
                                   Margin="20,50,20,50"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                    </Grid>
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="Match">
            <Grid HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Height="Auto"
                  Width="Auto">
                <ScrollViewer>
                    <ItemsControl ItemsSource="{Binding CurrentPoint.PossibleActions}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapGrid Orientation="Horizontal"
                                          MaximumRowsOrColumns="2"
                                          Margin="0" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Margin"
                                        Value="10,0" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button CommandParameter="{Binding Method}"
                                        Width="150"
                                        Height="150"
                                        
                                        Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                                        BorderThickness="0"
                                        Style="{StaticResource styleButton}"
                                        VerticalContentAlignment="Top"
                                        x:Name="btnAction"
                                        Padding="0"
                                        HorizontalAlignment="Center">
                                    <Button.ContentTemplate>
                                        <DataTemplate>
                                            <StackPanel Width="Auto">
                                                <Grid Width="Auto">
                                                    <Rectangle Fill="Black"
                                                               Opacity="0.25"
                                                               Width="200" />
                                                    <TextBlock Text="{Binding Command}"
                                                               Margin="0,2"
                                                               TextAlignment="Center" />
                                                </Grid>
                                                <Image Source="{Binding Icon}"                                                       
                                                       Width="100"
                                                       Height="100"
                                                       Stretch="Uniform"
                                                       Opacity="0.4" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="MatchScore">
            <StackPanel>
                <Grid Height="124"
                      Grid.Row="0"
                      Background="#80000000">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="148*" />
                        <ColumnDefinition Width="20*" />
                        <ColumnDefinition Width="48*" />
                        <ColumnDefinition Width="48*" />
                        <ColumnDefinition Width="76*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55*" />
                        <RowDefinition Height="15*" />
                        <RowDefinition Height="55*" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding vmMatch.NamePlayer1, Converter={StaticResource NameConverter}}"
                               FontSize="36"
                               Grid.Row="0"
                               Grid.Column="0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Foreground="White"
                               Margin="5,0,0,0" />
                    <TextBlock Text="{Binding vmMatch.ScorePlayer1}"
                               FontSize="48"
                               FontWeight="Bold"
                               Grid.Row="0"
                               Grid.Column="4"
                               HorizontalAlignment="Center" />
                    <Rectangle Fill="Green"
                               Width="Auto"
                               Height="Auto"
                               Margin="0"
                               Grid.Row="{Binding vmMatch.Winner}"
                               Grid.Column="1"
                               Visibility="{Binding vmMatch.Completed, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <TextBlock Text="•"
                               FontSize="36"
                               FontWeight="Bold"
                               Grid.Row="{Binding vmMatch.Server}"
                               Foreground="Yellow"
                               Grid.Column="1"
                               HorizontalAlignment="Center"
                               Visibility="{Binding vmMatch.InProgress, Converter={StaticResource BoolToVisibilityConverter}}" 
                               >
                    </TextBlock>
                    <TextBlock Text="{Binding vmMatch.TotalSets.Score1}"
                               FontSize="48"
                               Grid.Row="0"
                               Foreground="White"
                               Grid.Column="2"
                               HorizontalAlignment="Center"
                               FontFamily="Global User Interface" />
                    <Grid Background="#60000000"
                          Grid.Column="3"
                          Grid.Row="0">
                    </Grid>
                    <TextBlock Text="{Binding vmMatch.CurrentSetScore.Score1}"
                               FontSize="48"
                               Foreground="White"
                               Grid.Row="0"
                               Grid.Column="3"
                               HorizontalAlignment="Center" />
                    <Grid Background="#30000000"
                          Grid.ColumnSpan="5"
                          Grid.Row="1">
                    </Grid>
                    <TextBlock Text="{Binding vmMatch.MatchType}"
                               FontSize="8"
                               Margin="5,2,2,2"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Grid.Row="1"
                               HorizontalAlignment="Left" />
                    <TextBlock Text="SETS"
                               FontSize="8"
                               Margin="2"
                               Grid.Column="2"
                               Grid.Row="1"
                               HorizontalAlignment="Center" />
                    <TextBlock Text="GAMES"
                               FontSize="8"
                               Margin="2"
                               Grid.Column="3"
                               Grid.Row="1"
                               HorizontalAlignment="Center" />
                    <TextBlock Text="POINTS"
                               FontSize="8"
                               Margin="2"
                               Grid.Column="4"
                               Grid.Row="1"
                               HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding vmMatch.NamePlayer2, Converter={StaticResource NameConverter}}"
                               FontSize="36"
                               Grid.Row="2"
                               Grid.Column="0"
                               Foreground="White"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Margin="5,0,0,0" />
                    <TextBlock Text="{Binding vmMatch.ScorePlayer2}"
                               FontSize="48"
                               FontWeight="Bold"
                               Grid.Row="2"
                               Grid.Column="4"
                               HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding vmMatch.TotalSets.Score2}"
                               FontSize="48"
                               Foreground="White"
                               Grid.Row="2"
                               Grid.Column="2"
                               HorizontalAlignment="Center" />
                    <Grid Background="#60000000"
                          Grid.Column="3"
                          Grid.Row="2">
                    </Grid>
                    <TextBlock Text="{Binding vmMatch.CurrentSetScore.Score2}"
                               FontSize="48"
                               Foreground="White"
                               Grid.Row="2"
                               Grid.Column="3"
                               HorizontalAlignment="Center" />

                </Grid>

                <!-- Point descriptor 
                <Grid Background="#80FFFFFF"
                      Visibility="{Binding vmMatch.CurrentPointDescription, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid>
                        <TextBlock Text="{Binding vmMatch.CurrentPointDescription}"
                                   Visibility="{Binding vmMatch.CurrentPointDescription, Converter={StaticResource BoolToVisibilityConverter}}"
                                   FontSize="16"
                                   Margin="4,4,4,4" />
                    </Grid>
                </Grid>//-->
                <!-- Hidden spacer 
                <Grid Background="#00000000"
                      Visibility="{Binding vmMatch.CurrentPointDescription, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=xor}">
                    <Grid Background="#00000000">
                        <TextBlock Text=""
                                   FontSize="16"
                                   Margin="4,4,4,4" />
                    </Grid>
                </Grid>//-->
                <Grid Background="#80FFFFFF"
                      Visibility="{Binding vmMatch.InProgress, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=XOR}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60*" />
                            <ColumnDefinition Width="40*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding vmMatch.CurrentPointDescription}"
                                   Visibility="{Binding vmMatch.CurrentPointDescription, Converter={StaticResource BoolToVisibilityConverter}}"
                                   FontSize="16"
                                   Grid.Column="0"
                                   Margin="4,4,4,4" />
                        <TextBlock Text="{Binding vmMatch.Status}"
                                   FontSize="16"
                                   Grid.Column="0"
                                   Margin="4,4,4,4" />
                        <TextBlock Text="{Binding vmMatch.Duration, Converter={StaticResource DateTimeConverter}, ConverterParameter='MATCH TIME: '}"
                                   FontSize="16"
                                   Grid.Column="1"
                                   Margin="4,4,4,4"
                                   HorizontalAlignment="Right" />
                    </Grid>
                </Grid>
            </StackPanel>
        </DataTemplate>


    </Page.Resources>

    <Grid x:Name="LayoutRoot"
          Background="{StaticResource AppBackgroundBrush}"
          Padding="20">

        <!-- New match page -->
        <Grid 
            x:Name="NewMatchGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="80"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Button contestants-->
            <Button x:Name="btnContestants"
                                BorderThickness="0"
                                Padding="0"
                                Grid.Row="0"
                                Background="#80FFFFFF"
                                Grid.Column="0" 
                                Grid.ColumnSpan="2"
                                Margin="0,0,0,10"
                                Style="{StaticResource ButtonHighlightSelected}"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsEnabled="{Binding Tennis.Purchased}">                    
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="CONTESTANTS"
                                                   FontSize="14"
                                                   Foreground="#C0FFFFFF"
                                                   Margin="4"
                                                   Grid.Row="0" />
                            <TextBlock Text="{Binding vmNewMatch.Player1Description}"
                                                   Margin="4,0"
                                                   FontSize="24"
                                                   Grid.Row="1" />
                            <TextBlock Text="VS"
                                                   FontSize="10"
                                                   TextAlignment="Center"
                                                   Foreground="#C0FFFFFF"
                                                   Margin="4,6"
                                                   Grid.Row="2" />
                            <TextBlock Text="{Binding vmNewMatch.Player2Description}"
                                                   TextAlignment="Right"
                                                   Margin="4,0,4,4"
                                                   FontSize="24"
                                                   Grid.Row="3" />
                            <Image Grid.Column="1"
                                               Grid.RowSpan="4"
                                               Source="Assets/icon-pencil.png"
                                               Width="15"
                                               Height="15"
                                               Margin="6"
                                               VerticalAlignment="Center" />
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
                <Button.Flyout>
                    <Flyout x:Name="fyContestants">
                        <StackPanel Margin="8">
                            <TextBlock Text="PLAYER 1"
                                                   FontSize="12"
                                                   Foreground="#99FFFFFF" />
                            <AutoSuggestBox x:Name="txtPlayer1"
                                                        Text="{Binding vmNewMatch.Player1, Mode=TwoWay, Converter={StaticResource vmPlayerNameConverter}}"
                                                        ItemsSource="{Binding vmNewMatch.PreviousPlayers.FilteredPlayers}"
                                                        BorderBrush="{x:Null}"
                                                        TextMemberPath="Name">
                                <AutoSuggestBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="23" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Source="{Binding ProfilePicture}"
                                                               MaxWidth="20"
                                                               MaxHeight="20"
                                                               Grid.Column="0"
                                                               Stretch="Uniform" />
                                            <TextBlock Text="{Binding Name}"
                                                               Grid.Column="1"/>
                                        </Grid>
                                    </DataTemplate>
                                </AutoSuggestBox.ItemTemplate>
                            </AutoSuggestBox>
                            <AutoSuggestBox x:Name="txtPlayer1Partner"
                                                        Text="{Binding vmNewMatch.Player1Partner, Mode=TwoWay, Converter={StaticResource vmPlayerNameConverter}}"
                                                        ItemsSource="{Binding vmNewMatch.PreviousPlayers.FilteredPlayers}"
                                                        BorderBrush="{x:Null}"
                                                        Visibility="{Binding vmNewMatch.Doubles, Converter={StaticResource BoolToVisibilityConverter}}"
                                                        TextMemberPath="Name">
                                <AutoSuggestBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="23" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Source="{Binding ProfileImageBitmap}"
                                                               MaxWidth="20"
                                                               MaxHeight="20"
                                                               Grid.Column="0"
                                                               Stretch="Uniform" />
                                            <TextBlock Text="{Binding Name}"
                                                                   Grid.Column="1" />
                                        </Grid>
                                    </DataTemplate>
                                </AutoSuggestBox.ItemTemplate>
                            </AutoSuggestBox>
                            <TextBlock Text="PLAYER 2"
                                                   FontSize="12"
                                                   Foreground="#99FFFFFF" />
                            <AutoSuggestBox x:Name="txtPlayer2"
                                                        Text="{Binding vmNewMatch.Player2, Mode=TwoWay, Converter={StaticResource vmPlayerNameConverter}}"
                                                        ItemsSource="{Binding vmNewMatch.PreviousPlayers.FilteredPlayers}"
                                                        BorderBrush="{x:Null}"
                                                        TextMemberPath="Name">
                                <AutoSuggestBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="23" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Source="{Binding ProfileImageBitmap}"
                                                               MaxWidth="20"
                                                               MaxHeight="20"
                                                               Grid.Column="0"
                                                               Stretch="Uniform" />
                                            <TextBlock Text="{Binding Name}"
                                                                   Grid.Column="1" />
                                        </Grid>
                                    </DataTemplate>
                                </AutoSuggestBox.ItemTemplate>
                            </AutoSuggestBox>
                            <AutoSuggestBox x:Name="txtPlayer2Partner"
                                                        Text="{Binding vmNewMatch.Player2Partner, Mode=TwoWay, Converter={StaticResource vmPlayerNameConverter}}"
                                                        ItemsSource="{Binding vmNewMatch.PreviousPlayers.FilteredPlayers}"
                                                        BorderBrush="{x:Null}"
                                                        Visibility="{Binding vmNewMatch.Doubles, Converter={StaticResource BoolToVisibilityConverter}}" 
                                                        TextMemberPath="Name">
                                <AutoSuggestBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="23" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image Source="{Binding ProfileImageBitmap}"
                                                               MaxWidth="20"
                                                               MaxHeight="20"
                                                               Grid.Column="0"
                                                               Stretch="Uniform" />
                                            <TextBlock Text="{Binding Name}"
                                                                   Grid.Column="1" />
                                        </Grid>
                                    </DataTemplate>
                                </AutoSuggestBox.ItemTemplate>
                            </AutoSuggestBox>
                            <Button x:Name="btnContestantsFlyout"
                                                HorizontalAlignment="Center"
                                                Click="btnContestantsFlyout_Click">Ok</Button>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <!-- Button match -->
            <Button x:Name="btnMatch"
                                BorderThickness="0"
                                Padding="0"
                                Margin="0,10,0,10"  
                                Background="#80FFFFFF"
                                Grid.Row="1" 
                                Grid.Column="0" 
                                Grid.ColumnSpan="2"
                                Style="{StaticResource ButtonHighlightSelected}"
                                HorizontalContentAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                IsEnabled="{Binding Tennis.Purchased}">                    
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="MATCH"
                                                   FontSize="14"
                                                   Foreground="#C0FFFFFF"
                                                   Margin="4"
                                                   Grid.Row="0" />
                            <TextBlock Text="{Binding vmNewMatch.MatchDescription}"
                                                   FontSize="24"
                                                   FontWeight="Normal"
                                                   Margin="4,0,4,4"
                                                   Grid.Row="1" />
                            <Image Grid.Column="1"
                                               Grid.RowSpan="2"
                                               Source="Assets/icon-pencil.png"
                                               Width="15"
                                               Height="15"
                                               Margin="6"
                                               VerticalAlignment="Center" />
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
                <Button.Flyout>
                    <Flyout x:Name="fyMatch">
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>


                            <TextBlock Text="TYPE"
                                                   FontSize="12"
                                                   Foreground="#99FFFFFF"
                                                   Grid.Row="0" />
                            <ComboBox x:Name="lstType"
                                                  SelectedIndex="{Binding vmNewMatch.Type, Mode=TwoWay}"
                                                  Background="White"
                                                  BorderBrush="{x:Null}"
                                                  Foreground="Black"
                                                  Grid.Row="1">
                                <ComboBoxItem>Singles</ComboBoxItem>
                                <ComboBoxItem>Doubles</ComboBoxItem>
                            </ComboBox>
                            <TextBlock Text="SETS"
                                                   FontSize="12"
                                                   Foreground="#99FFFFFF"
                                                   Grid.Row="2" />
                            <ComboBox x:Name="lstSets"
                                                  SelectedIndex="{Binding vmNewMatch.BestOutOf, Mode=TwoWay}"
                                                  Grid.Row="3">
                                <ComboBoxItem>1</ComboBoxItem>
                                <ComboBoxItem>3</ComboBoxItem>
                                <ComboBoxItem>5</ComboBoxItem>
                            </ComboBox>
                            <!--<Button x:Name="btnAdvanced"
                                                Content="Advanced"
                                                HorizontalAlignment="Center"
                                                Click="btnAdvanced_Click" 
                                                Grid.Row="4"/>-->
                            <TextBlock Text="RULES"
                                                   FontSize="12"
                                                   Foreground="#99FFFFFF"
                                                   Grid.Row="5" />
                            <ComboBox x:Name="lstRules"
                                                  ItemsSource="{Binding vmNewMatch.MatchVariants}"
                                                  SelectedIndex="{Binding vmNewMatch.SelectedMatchIndex, Mode=TwoWay}"
                                                  Grid.Row="6">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Description}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <!--<TextBlock Text="TIEBREAK FINAL SET"
                                                   FontSize="12"
                                                   Foreground="#99FFFFFF"
                                                   Grid.Row="7" />
                                        <CheckBox x:Name="chkTiebreakFinalSet"
                                                  IsChecked="{Binding vmNewMatch.TiebreakFinalSet, Mode=TwoWay}"
                                                  Grid.Row="8" />-->
                            <Button x:Name="btnFyMatch"
                                                HorizontalAlignment="Center"
                                                Grid.Row="9"
                                                Click="btnFyMatch_Click">Ok</Button>
                        </Grid>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <!-- Button Logging -->
            <Button x:Name="btnLogLevel"
                                Visibility="Collapsed"
                                BorderThickness="0"
                                Padding="0"
                                Margin="10,0,10,0"                                
                                Background="#80FFFFFF"
                                Style="{StaticResource ButtonHighlightSelected}"
                                Grid.Row="2" 
                                Grid.Column="0" 
                                Grid.ColumnSpan="2"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                IsEnabled="{Binding Tennis.Purchased}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="LOGGING"
                                                   FontSize="10"
                                                   Foreground="#C0FFFFFF"
                                                   Margin="4"
                                                   Grid.Row="0" />
                            <TextBlock Text="{Binding vmNewMatch.LogLevelDescription}"
                                                   FontSize="24"
                                                   FontWeight="Normal"
                                                   Margin="4,0,4,4"
                                                   Grid.Row="1" />
                            <Image Grid.Column="1"
                                               Grid.RowSpan="2"
                                               Source="Assets/icon-pencil.png"
                                               Width="15"
                                               Height="15"
                                               Margin="6"
                                               VerticalAlignment="Center" />
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
                <Button.Flyout>
                    <Flyout x:Name="fyLogLevel">
                        <StackPanel Margin="8">
                            <TextBlock Text="LOGGING"
                                                   FontSize="14"
                                                   Foreground="#C0FFFFFF" />

                            <ListBox x:Name="lstLog"
                                                 SelectedIndex="{Binding vmNewMatch.LogLevel, Mode=TwoWay}"
                                                 Background="White"
                                                 BorderBrush="{x:Null}"
                                                 Foreground="Black"
                                                 FontSize="24">
                                <ListBoxItem>Points</ListBoxItem>
                                <ListBoxItem>Errors</ListBoxItem>
                                <ListBoxItem>Shots</ListBoxItem>
                            </ListBox>
                            <Button x:Name="btnFyLogLevel"
                                                HorizontalAlignment="Center"
                                                Click="btnFyLogLevel_Click">Ok</Button>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <!-- Button Tennis Court -->
            <Button x:Name="btnCourt"
                                BorderThickness="0"
                                Padding="0"
                                Margin="0,10,0,10"
                                Background="#80FFFFFF"
                                Style="{StaticResource ButtonHighlightSelected}"
                                Grid.Row="2" 
                                Grid.Column="0" 
                                Grid.ColumnSpan="2"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                IsEnabled="{Binding Tennis.Purchased}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Text="COURT"
                                                   FontSize="14"
                                                   Foreground="#C0FFFFFF"
                                                   Margin="4"
                                                   Grid.Row="0" />

                            <StackPanel Grid.Row="1">

                                <TextBlock Text="{Binding vmNewMatch.SurfaceRepresentation}"
                                                   FontSize="24"
                                                   FontWeight="Normal"
                                                   Margin="4,0,4,4"/>

                            </StackPanel>

                            <Image Grid.Column="1"
                                               Grid.RowSpan="2"
                                               Source="Assets/icon-pencil.png"
                                               Width="15"
                                               Height="15"
                                               Margin="6"
                                               VerticalAlignment="Center" />
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
                <Button.Flyout>
                    <Flyout x:Name="fyCourt">
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Text="COURT"
                                                       FontSize="12"
                                                       Foreground="#99FFFFFF"
                                                       Grid.Row="0" 
                                                       Margin="0,0,0,8"/>
                            <ListBox x:Name="lstSurface"
                                                     SelectedIndex="{Binding vmNewMatch.Surface, Mode=TwoWay}"
                                                     Background="White"
                                                     BorderBrush="{x:Null}"
                                                     Foreground="Black"
                                                     FontSize="24"
                                                     Grid.Row="1">
                                <ListBoxItem>Clay</ListBoxItem>
                                <ListBoxItem>Artificial grass</ListBoxItem>
                                <ListBoxItem>Hard</ListBoxItem>
                                <ListBoxItem>Indoor</ListBoxItem>
                                <ListBoxItem>Grass</ListBoxItem>
                            </ListBox>

                            <Button x:Name="btnFyCourtOk"
                                                Grid.Row="5"
                                                HorizontalAlignment="Center"
                                                    Click="btnFyCourtOk_Click">Ok</Button>
                        </Grid>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <!-- Start button -->
            <Button Content="Start" 
                        Grid.Row="3" 
                        Grid.Column="0" 
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Margin="0,10,0,10"
                        FontSize="18"
                        Background="#C000C000"
                        BorderBrush="Transparent"
                        x:Name="StartButton"
                        Foreground="White"
                        MaxHeight="60"
                        MinHeight="35"
                        IsEnabled="{Binding Tennis.Purchased}"
                        Style="{StaticResource ButtonHighlightSelected}"
                        Click="StartButton_Click"/>

            <!-- distance 
            <ContentPresenter Grid.Row="3"
                              Grid.ColumnSpan="2"
                          Margin="10,10,10,10"
                          ContentTemplate="{StaticResource MatchScore}" />-->
        </Grid>

        <!-- Match page -->
        <Grid Visibility="Collapsed"
              x:Name="MatchGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ContentPresenter Grid.Row="1"
                          Margin="10"
                          ContentTemplate="{StaticResource MatchScore}" />

            <ContentPresenter Grid.Row="2"
                          Margin="10"
                          ContentTemplate="{StaticResource Statistics2}" />
        </Grid>

        <StackPanel 
            x:Name="ProgressRing"
            Visibility="Collapsed"
            HorizontalAlignment="Center" 
            VerticalAlignment="Center">
            <ProgressRing 
                x:Name="PRelement"
                Background="{x:Null}" 
                Foreground="White"/>
            <TextBlock
                Margin="10"
                FontSize="20"
                >(Re)loading match</TextBlock>
        </StackPanel>

        <StackPanel
            VerticalAlignment="Center">
        <Button Content="Unlock"
                Name="btnPurchase"
                HorizontalAlignment="Center"
                Foreground="White"
                Style="{StaticResource ButtonHighlightSelected}"                
                Visibility="{Binding Tennis.Purchased, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=xor}"
                Click="btnPurchase_Click"
                BorderThickness="1"
                Background="#F000C000"
                MinWidth="180"
                Height="143">
            <Button.ContentTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Margin="5"
                                HorizontalAlignment="Center"
                                RenderTransformOrigin="0.5,0.5">
                            <TextBlock.RenderTransform>
                                <CompositeTransform ScaleX="0.7"
                                                    ScaleY="0.7" />
                            </TextBlock.RenderTransform>In-app purchase</TextBlock>
                        <TextBlock Margin="10"
                                HorizontalAlignment="Center"
                                RenderTransformOrigin="0.5,0.5">
                            <TextBlock.RenderTransform>
                                <CompositeTransform ScaleX="1.4"
                                                    ScaleY="1.4" />
                            </TextBlock.RenderTransform>Tennis app</TextBlock>
                        <TextBlock Margin="10"
                                    HorizontalAlignment="Center">$ 1.49</TextBlock>
                    </StackPanel>
                </DataTemplate>
            </Button.ContentTemplate>
        </Button>

        <Button Content="{Binding Tennis.TriesLeft, Converter={StaticResource StringFormatConverter}, ConverterParameter='Try - {0} left'}"
                Style="{StaticResource ButtonHighlightSelected}"                
                Background="#FFC0C0C0"
                Foreground="Black"
                Name="btnTry"
                HorizontalAlignment="Center"
                Visibility="{Binding Tennis.TryLeft, Converter={StaticResource BoolToVisibilityConverter}}"
                Width="180" 
                Margin="0,10,0,0"
                Command="{Binding Tennis.TryCommand}" Height="65">

        </Button>
        </StackPanel>
    </Grid>

    <!-- App Bar
    <Page.BottomAppBar>
        <CommandBar Background="#CC1F1F1F" x:Name="BottomCommandBar">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Name="btnSwitch"
                              Icon="Switch"
                              Visibility="{Binding vmMatch.Switch, Converter={StaticResource BoolToVisibilityConverter}}"
                              Label="Switch" Click="btnSwitch_Click" />
                <AppBarButton x:Name="btnResume"
                              Icon="Play"
                              Label="Resume" 
                              Visibility="{Binding vmMatch.Paused, Converter={StaticResource BoolToVisibilityConverter}}"
                              Click="btnResume_Click"/>
                <AppBarButton x:Name="btnStop"
                              Label="Stop"
                              Icon="Stop"
                              Visibility="{Binding vmMatch.Stoppable, Converter={StaticResource BoolToVisibilityConverter}}" 
                              Click="btnStop_Click"/>
                <AppBarButton x:Name="btnSuspend"
                              Label="Suspend"
                              Icon="Pause"
                              Visibility="{Binding vmMatch.Stoppable, Converter={StaticResource BoolToVisibilityConverter}}" 
                              Click="btnSuspend_Click"/>
                <AppBarButton x:Name="btnExtend"
                              Label="New set"
                              Icon="Add"
                              Visibility="{Binding vmMatch.IsExtendPossible, Converter={StaticResource BoolToVisibilityConverter}}" Click="btnExtend_Click"/>
                <AppBarButton x:Name="btnDelete"
                              Icon="Delete"
                              Label="Delete" 
                              Visibility="{Binding vmMatch.Completed, Converter={StaticResource BoolToVisibilityConverter}}"
                              Click="btnDelete_Click"/>
                <AppBarButton x:Name="btnShare"
                              Label="Share"
                              Visibility="{Binding vmMatch.Completed, Converter={StaticResource BoolToVisibilityConverter}}" Click="ShareButton_Click">
                    <AppBarButton.Icon>
                        <BitmapIcon UriSource="ms-appx:///Assets/share.png" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Page.BottomAppBar>-->
</Page>
